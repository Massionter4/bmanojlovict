This is the distribution of Log4C

* What is Log4C

   Log4C is a C library for flexible logging to files, syslog and other
   destinations. It is modeled after the Log for Java library
   (http://jakarta.apache.org/log4j/), staying as close to their API as is
   reasonable.

* Licensing

   Log4C libraries are released under the terms of the GNU Lesser
   General Public License (GNU LGPL). 

   You can find copies of the license in the file COPYING

* What you will need

   perl (used by the automake tools)

   GNU make tools: automake, autoconf, m4 and libtool

   A Compiler, among those tested are:
   . gcc3
   . Sun cc (versions 5.3 and 5.7 on Solaris 8 and higher, sparc and i386)

   you will also need the bison-1.35 and flex-2.5.27 to re generate
   the xml parser. These are obsolete versions of bison and
   flex. Therefore, pre-generated files are distributed in the tarball. 

* Where to find ...

   GNU automake tools:
	     	http://gcc.gnu.org
              	http://www.sunfreeware.com for pre-built Solaris packages

   gcc3		http://gcc.gnu.org
              	http://www.sunfreeware.com for pre-built Solaris packages

   log4c	http://log4c.sf.net/
		
   bison	ftp://ftp.gnu.org/gnu/bison

   flex		http://sourceforge.net/projects/lex/

   The SourceForge site is now the main log4c site.

* How to for library users ...

   The log4c package uses the GNU autotools compilation and installation
   framework. The following commands should build log4c on the supported
   platforms:

	$ ./configure --prefix=/path/of/installation
	$ make
	$ make install

   To enable compilation of the test programs for the library you would do this:
        $ ./configure --prefix=/path/of/installation --enable-test
   
   To specify a compiler other than gcc you would do something like this:
       $ ./configure --prefix=/path/of/installation --enable-test CC=/usr/SUNWspro/bin/cc

   For information on compiling on Windows see the README in the msvc6 directory.

* How to for library developers ...
   
   When you check out log4c you will need to generate the configure script and so on.  To do this
   run the bootstrap script:
	$ ./bootstrap

   To compile in extra tracing and messages you would do this:
        $ ./configure --prefix=/path/of/installation --enable-test --enable-debug=yes 

   This will define the __SD_DEBUG__ variable at compile time.  Note that you still
   need to define the SD_ERROR and SD_DEBUG envronment variables at run time
   to get the error/debug output.

   See './configure --help' for a list of all the configure options

   

Have Fun !!
   
 Cédric Le Goater <legoater@free.fr>

